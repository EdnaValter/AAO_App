// <auto-generated />
using System;
using AAO_App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AAO_App.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220104120006_AddContactTable")]
    partial class AddContactTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AAO_App.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentsDepId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.HasIndex("DepartmentsDepId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("AAO_App.Models.Department", b =>
                {
                    b.Property<int>("DepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("AAO_App.Models.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addresse")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("License")
                        .HasColumnType("bit");

                    b.Property<int?>("LocationsLocationId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("DriverId");

                    b.HasIndex("LocationsLocationId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("AAO_App.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("CountryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentsDepId")
                        .HasColumnType("int");

                    b.Property<string>("Zipcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.HasIndex("DepartmentsDepId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("AAO_App.Models.RequestedTrip", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("RequestId");

                    b.HasIndex("DriverId");

                    b.HasIndex("TripId");

                    b.ToTable("RequestedTrips");
                });

            modelBuilder.Entity("AAO_App.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripId");

                    b.HasIndex("ContactId");

                    b.HasIndex("LocationId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("App.Models.LicenseType", b =>
                {
                    b.Property<int>("LicenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicenseTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LicenseId");

                    b.ToTable("LicenseTypes");
                });

            modelBuilder.Entity("DriverLicenseType", b =>
                {
                    b.Property<int>("DriversDriverId")
                        .HasColumnType("int");

                    b.Property<int>("LicenseTypesLicenseId")
                        .HasColumnType("int");

                    b.HasKey("DriversDriverId", "LicenseTypesLicenseId");

                    b.HasIndex("LicenseTypesLicenseId");

                    b.ToTable("DriverLicenseType");
                });

            modelBuilder.Entity("AAO_App.Models.Contact", b =>
                {
                    b.HasOne("AAO_App.Models.Department", "Departments")
                        .WithMany("Contacts")
                        .HasForeignKey("DepartmentsDepId");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("AAO_App.Models.Driver", b =>
                {
                    b.HasOne("AAO_App.Models.Location", "Locations")
                        .WithMany()
                        .HasForeignKey("LocationsLocationId");

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("AAO_App.Models.Location", b =>
                {
                    b.HasOne("AAO_App.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentsDepId");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("AAO_App.Models.RequestedTrip", b =>
                {
                    b.HasOne("AAO_App.Models.Driver", "Drivers")
                        .WithMany("RequestedTrips")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AAO_App.Models.Trip", "Trips")
                        .WithMany("RequestedTrips")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drivers");

                    b.Navigation("Trips");
                });

            modelBuilder.Entity("AAO_App.Models.Trip", b =>
                {
                    b.HasOne("AAO_App.Models.Contact", "Contacts")
                        .WithMany()
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AAO_App.Models.Location", "Locations")
                        .WithMany("Trips")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contacts");

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("DriverLicenseType", b =>
                {
                    b.HasOne("AAO_App.Models.Driver", null)
                        .WithMany()
                        .HasForeignKey("DriversDriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Models.LicenseType", null)
                        .WithMany()
                        .HasForeignKey("LicenseTypesLicenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AAO_App.Models.Department", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("AAO_App.Models.Driver", b =>
                {
                    b.Navigation("RequestedTrips");
                });

            modelBuilder.Entity("AAO_App.Models.Location", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("AAO_App.Models.Trip", b =>
                {
                    b.Navigation("RequestedTrips");
                });
#pragma warning restore 612, 618
        }
    }
}
